import subprocess
import json
import os

ZK_DIR = os.path.dirname(__file__)
BUILD_DIR = os.path.join(ZK_DIR, "build")

def write_input_json(expected: int, actual: int):
    data = {
        "expected": str(expected),
        "actual": str(actual)
    }
    with open(os.path.join(BUILD_DIR, "input.json"), "w") as f:
        json.dump(data, f)
    print("üìù input.json —Å—Ç–≤–æ—Ä–µ–Ω–æ")

def generate_proof():
    os.chdir(BUILD_DIR)

    print("‚öôÔ∏è  –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è witness...")
    subprocess.run(["node", "proof_js/generate_witness.js", "proof_js/proof.wasm", "input.json", "witness.wtns"], check=True)

    print("‚öôÔ∏è  –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è proof...")
    subprocess.run(["snarkjs", "groth16", "prove", "proof_0000.zkey", "witness.wtns", "proof.json", "public.json"], check=True)

    print("‚öôÔ∏è  –í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è proof...")
    result = subprocess.run(["snarkjs", "groth16", "verify", "verification_key.json", "public.json", "proof.json"], capture_output=True, text=True)

    if "OK!" in result.stdout:
        print("‚úÖ Proof —É—Å–ø—ñ—à–Ω–æ –≤–µ—Ä–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ")
        return True
    else:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ")
        print(result.stdout)
        return False
